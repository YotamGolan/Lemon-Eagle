41 2 0
38 1
11 444 132 471 34 0 1
25 114 402 221 306
20 246 312 305 293 0
in3
20 252 336 311 317 0
in2
20 258 360 317 341 0
in1
20 264 384 323 365 0
in0
8 108 252 157 203 1 1
20 228 228 287 209 0
getrnd
19 330 108 389 89 0
reg3
19 342 132 401 113 0
reg2
19 354 156 413 137 0
reg1
19 366 180 425 161 0
reg0
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
11 708 132 735 34 0 1
11 630 132 657 34 0 0
22 588 30 742 10 0 \NUL
(signed) Decimal Score
22 24 330 90 310 0 \NUL
Gamepad
22 18 246 108 226 0 \NUL
New Problem
8 108 156 157 107 1 1
20 228 132 287 113 0
reset
5 174 156 223 107 0
22 18 132 101 112 0 \NUL
Reset Score
19 624 150 683 131 0
score3
19 630 174 689 155 0
score2
19 636 198 695 179 0
score1
19 642 222 701 203 0
score0
19 498 96 557 77 0
sgn6
19 504 120 563 101 0
sgn5
19 510 144 569 125 0
sgn4
19 516 168 575 149 0
sgn3
19 522 192 581 173 0
sgn2
19 528 216 587 197 0
sgn1
19 534 240 593 221 0
sgn0
11 720 426 747 328 0 1
19 618 402 677 383 0
ans3
19 630 426 689 407 0
ans2
19 636 450 695 431 0
ans1
19 648 474 707 455 0
ans0
22 390 30 530 10 0 \NUL
Score Register Value
22 678 324 779 304 0 \NUL
Correct Answer
22 12 444 96 424 0 \NUL
How to play:
22 12 516 392 496 0 \NUL
3. Press "New Problem" to generate a new set of numbers
22 12 540 434 520 0 \NUL
4. Guess the result of r0 + r1 (function = 0) or r0 - r1 (function = 1)
22 12 468 165 448 0 \NUL
1. Press "Reset Score"
22 12 588 238 568 0 \NUL
6. Repeat steps 2 - 5 until satiated
8 108 204 157 155 1 0
20 228 180 287 161 0
func
22 18 210 96 190 0 \NUL
0 => r0 + r1
8 108 300 157 251 1 1
20 228 276 287 257 0
update
22 18 276 109 256 0 \NUL
Update Score
22 12 564 421 544 0 \NUL
5. Press "Update Score" (+1 correct guess, - 1 incorrect guess)
22 18 192 92 172 0 \NUL
1 => r0 - r1
19 342 402 401 383 0
r0_3
19 348 426 407 407 0
r0_2
19 354 450 413 431 0
r0_1
19 360 474 419 455 0
r0_0
11 438 426 465 328 0 1
19 474 402 533 383 0
r1_3
19 480 426 539 407 0
r1_2
19 486 450 545 431 0
r1_1
19 492 474 551 455 0
r1_0
11 570 426 597 328 0 1
22 414 324 496 304 0 \NUL
Random # 0
22 546 324 628 304 0 \NUL
Random # 1
7 528 564 577 515 2 1
19 456 552 515 533 0
ovrflw
22 516 516 577 496 0 \NUL
Overflow
22 510 264 692 244 0 \NUL
max score implemented? N
22 12 492 271 472 0 \NUL
2. Select function (0 = add, 1 = subtract)
22 18 174 77 154 0 \NUL
Function
8 660 564 709 515 1 0
22 666 510 707 490 0 \NUL
Cheat
20 726 534 785 515 0
cheat
22 576 594 774 574 0 \NUL
cheat switch implemented?  Y
22 510 288 688 268 0 \NUL
min score implemented? N
1 247 302 218 374
1 253 326 218 380
1 259 350 218 386
1 265 374 218 392
1 229 218 154 227
1 445 98 386 98
1 445 104 398 122
1 445 110 410 146
1 445 116 422 170
1 229 122 220 131
1 175 131 154 131
1 709 98 680 140
1 709 104 686 164
1 709 110 692 188
1 709 116 698 212
1 631 86 554 86
1 631 92 560 110
1 631 98 566 134
1 631 104 572 158
1 631 110 578 182
1 631 116 584 206
1 631 122 590 230
1 721 392 674 392
1 721 398 686 416
1 721 404 692 440
1 721 410 704 464
1 154 179 229 170
1 229 266 154 275
1 439 410 416 464
1 439 404 410 440
1 439 398 404 416
1 439 392 398 392
1 571 410 548 464
1 571 404 542 440
1 571 398 536 416
1 571 392 530 392
1 706 539 727 524
1 512 542 529 539
38 2
34 102 288 151 239 0 0
20 180 192 239 173 0
r0_0
20 186 216 245 197 0
r0_1
20 192 240 251 221 0
r0_2
20 198 264 257 245 0
r0_3
19 30 258 89 239 0
getrnd
34 102 438 151 389 0 0
20 180 342 239 323 0
r1_0
20 186 366 245 347 0
r1_1
20 192 390 251 371 0
r1_2
20 198 414 257 395 0
r1_3
19 30 408 89 389 0
getrnd
22 84 318 166 298 0 \NUL
Random # 0
22 84 468 166 448 0 \NUL
Random # 1
22 18 156 412 136 0 \NUL
random numbers (do not modify random number generators)
22 564 78 794 58 0 \NUL
placeholder senders and receivers
22 426 546 792 526 0 \NUL
these are only present so circuit simulates without error
22 492 570 759 550 0 \NUL
remove these once logic is implemented
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
1 181 182 148 242
1 187 206 148 248
1 193 230 148 260
1 199 254 148 278
1 86 248 103 248
1 86 398 103 398
1 148 422 199 404
1 148 416 193 380
1 148 410 187 356
1 148 404 181 332
38 3
22 264 30 342 10 0 \NUL
Cheat Page
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
19 36 132 95 113 0
cheat
19 102 168 161 149 0
tans0
3 168 162 217 113 0 0
20 222 144 281 125 0
ans0
19 36 204 95 185 0
cheat
19 102 240 161 221 0
tans1
3 168 234 217 185 0 0
20 222 216 281 197 0
ans1
19 36 276 95 257 0
cheat
19 102 312 161 293 0
tans2
3 168 306 217 257 0 0
20 222 288 281 269 0
ans2
19 36 348 95 329 0
cheat
19 102 384 161 365 0
tans3
3 168 378 217 329 0 0
20 222 360 281 341 0
ans3
22 48 426 408 406 0 \NUL
If cheat is disabled, answer is moved through normally
22 48 450 398 430 0 \NUL
If cheat is enabled, answer is simply outputted as a 0
1 158 158 169 151
1 214 137 223 134
1 158 230 169 223
1 214 209 223 206
1 158 302 169 295
1 214 281 223 278
1 158 374 169 367
1 214 353 223 350
1 92 338 169 339
1 169 267 92 266
1 92 194 169 195
1 169 123 92 122
38 4
22 324 30 510 10 0 \NUL
4-bit Random Number Adder
35 96 138 145 89 0 0
35 162 150 211 101 0 0
4 294 222 343 173 0 0
3 216 198 265 149 0 0
20 228 138 287 119 0
tans0
19 6 138 65 119 0
r0_0
19 6 108 65 89 0
fran0
3 216 240 265 191 0 0
15 6 192 55 143
5 60 192 109 143 0
20 348 204 407 185 0
Rem0
20 222 432 281 413 0
tans2
35 90 450 139 401 0 0
35 144 462 193 413 0 0
4 294 534 343 485 0 0
3 216 510 265 461 0 0
3 216 552 265 503 0 0
19 132 522 191 503 0
fran2
19 6 450 65 431 0
r0_2
20 348 516 407 497 0
Rem2
19 6 480 65 461 0
Rem1
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 18 570 572 550 0 \NUL
This is a full adder, which adds random number 0 and the modified random number 1
22 18 594 705 574 0 \NUL
The random number 1 is modified based on a multiplexor based on whether its being added or subtracted
19 6 420 65 401 0
fran2
19 132 546 191 527 0
r0_2
20 222 282 281 263 0
tans1
35 90 300 139 251 0 0
35 144 312 193 263 0 0
4 294 384 343 335 0 0
3 216 360 265 311 0 0
3 216 402 265 353 0 0
19 132 372 191 353 0
fran1
19 6 300 65 281 0
r0_1
20 348 366 407 347 0
Rem1
19 6 330 65 311 0
Rem0
19 6 270 65 251 0
fran1
19 132 396 191 377 0
r0_1
20 588 114 647 95 0
tans3
35 456 132 505 83 0 0
35 510 144 559 95 0 0
4 660 216 709 167 0 0
3 582 192 631 143 0 0
3 582 234 631 185 0 0
19 498 204 557 185 0
fran3
19 372 132 431 113 0
r0_3
19 372 162 431 143 0
Rem2
19 372 102 431 83 0
fran3
19 498 228 557 209 0
r0_3
19 138 240 197 221 0
r0_0
19 138 216 197 197 0
fran0
1 142 113 163 111
1 142 113 217 187
1 262 173 295 183
1 295 211 262 215
1 62 128 97 127
1 97 99 62 98
1 61 167 52 167
1 106 167 163 139
1 106 167 217 159
1 340 197 349 194
1 208 125 229 128
1 136 425 145 423
1 136 425 217 499
1 262 485 295 495
1 295 523 262 527
1 188 512 217 513
1 62 440 91 439
1 340 509 349 506
1 145 451 62 470
1 62 470 217 471
1 223 422 190 437
1 62 410 91 411
1 217 541 188 536
1 136 275 145 273
1 136 275 217 349
1 262 335 295 345
1 295 373 262 377
1 188 362 217 363
1 62 290 91 289
1 340 359 349 356
1 145 301 62 320
1 62 320 217 321
1 223 272 190 287
1 62 260 91 261
1 217 391 188 386
1 502 107 511 105
1 502 107 583 181
1 628 167 661 177
1 661 205 628 209
1 554 194 583 195
1 428 122 457 121
1 511 133 428 152
1 428 152 583 153
1 589 104 556 119
1 428 92 457 93
1 583 223 554 218
1 217 229 194 230
1 194 206 217 201
38 5
22 336 30 436 10 0 \NUL
Overflow Logic
22 276 54 566 34 0 \NUL
logic to determine if computation overflowed
19 60 150 119 131 0
r0_3
19 60 210 119 191 0
tans3
20 486 288 545 269 0
ovrflw
19 60 180 119 161 0
func
5 132 198 181 149 0
5 132 168 181 119 0
5 132 132 181 83 0
3 210 174 259 125 2 0
19 60 270 119 251 0
r0_3
19 60 330 119 311 0
tans3
19 60 300 119 281 0
func
5 132 342 181 293 0
5 132 312 181 263 0
3 210 312 259 263 2 0
19 60 402 119 383 0
r0_3
19 60 462 119 443 0
tans3
19 60 432 119 413 0
func
19 60 372 119 353 0
r1_3
19 60 246 119 227 0
r1_3
19 60 120 119 101 0
r1_3
3 210 432 259 383 2 0
5 132 420 181 371 0
19 60 522 119 503 0
r0_3
19 60 582 119 563 0
tans3
19 60 552 119 533 0
func
19 60 492 119 473 0
r1_3
3 210 552 259 503 2 0
5 132 504 181 455 0
5 132 600 181 551 0
4 414 300 463 251 2 0
22 252 558 640 538 0 \NUL
Using Sum of Products to determine every case of overflow
22 216 120 264 100 0 \NUL
P+P=N
22 216 252 265 232 0 \NUL
N+N=P
22 216 498 260 478 0 \NUL
N-P=P
22 216 372 261 352 0 \NUL
P-N=N
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
1 116 140 133 143
1 116 170 133 173
1 178 107 211 135
1 211 154 178 173
1 178 143 211 144
1 211 163 116 200
1 116 320 133 317
1 116 290 133 287
1 211 282 116 260
1 211 292 178 287
1 178 317 211 301
1 116 110 133 107
1 116 236 211 273
1 116 392 133 395
1 178 395 211 402
1 211 393 116 362
1 116 422 211 412
1 116 452 211 421
1 116 542 211 532
1 116 572 133 575
1 178 575 211 541
1 211 522 116 512
1 133 479 116 482
1 178 479 211 513
1 256 527 415 289
1 415 280 256 407
1 256 287 415 270
1 415 261 256 149
1 460 275 487 278
38 6
22 342 30 453 10 0 \NUL
4-bit Comparator
19 48 150 107 131 0
ans3
19 48 216 107 197 0
ans2
19 48 276 107 257 0
ans1
19 48 342 107 323 0
ans0
19 48 174 107 155 0
in3
19 48 240 107 221 0
in2
19 48 300 107 281 0
in1
19 48 366 107 347 0
in0
3 186 270 235 221 2 0
35 120 180 169 131 0 1
35 114 252 163 203 0 1
35 120 300 169 251 0 1
35 126 372 175 323 0 1
20 258 252 317 233 0
equal
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 78 396 676 376 0 \NUL
Simply compares correct answer and chosen answer, and outputs signal if they are a match
1 104 140 121 141
1 104 164 121 169
1 166 155 187 231
1 104 332 127 333
1 127 361 104 356
1 121 289 104 290
1 121 261 104 266
1 115 241 104 230
1 115 213 104 206
1 160 227 187 240
1 187 250 166 275
1 187 259 172 347
1 232 245 259 242
38 7
22 342 30 459 10 0 \NUL
4-bit Multiplexors
19 66 156 125 137 0
r1_0
19 66 216 125 197 0
rinv0
19 66 240 125 221 0
func
5 138 198 187 149 0
3 180 186 229 137 0 0
3 150 246 199 197 0 0
4 240 216 289 167 0 0
20 300 198 359 179 0
fran0
19 66 276 125 257 0
r1_1
19 66 336 125 317 0
rinv1
19 66 360 125 341 0
func
5 138 318 187 269 0
3 180 306 229 257 0 0
3 150 366 199 317 0 0
4 240 336 289 287 0 0
20 300 318 359 299 0
fran1
19 66 396 125 377 0
r1_2
19 66 456 125 437 0
rinv2
19 66 480 125 461 0
func
5 138 438 187 389 0
3 180 426 229 377 0 0
3 150 486 199 437 0 0
4 240 456 289 407 0 0
20 300 438 359 419 0
fran2
19 66 510 125 491 0
r1_3
19 66 570 125 551 0
rinv3
19 66 594 125 575 0
func
5 138 552 187 503 0
3 180 540 229 491 0 0
3 150 600 199 551 0 0
4 240 570 289 521 0 0
20 300 552 359 533 0
fran3
19 402 156 461 137 0
-Scr0
19 402 216 461 197 0
+Scr0
19 402 240 461 221 0
equal
5 474 198 523 149 0
3 528 186 577 137 0 0
3 486 246 535 197 0 0
4 576 216 625 167 0 0
20 636 198 695 179 0
sum0
19 402 276 461 257 0
-Scr1
19 402 336 461 317 0
+Scr1
19 402 360 461 341 0
equal
5 474 318 523 269 0
3 528 306 577 257 0 0
3 486 366 535 317 0 0
4 576 336 625 287 0 0
20 636 318 695 299 0
sum1
19 402 396 461 377 0
-Scr2
19 402 456 461 437 0
+Scr2
19 402 480 461 461 0
equal
5 474 438 523 389 0
3 528 426 577 377 0 0
3 486 486 535 437 0 0
4 576 456 625 407 0 0
20 636 438 695 419 0
sum2
19 402 510 461 491 0
-Scr3
19 396 570 455 551 0
+Scr3
19 402 594 461 575 0
equal
5 474 552 523 503 0
3 528 540 577 491 0 0
3 486 600 535 551 0 0
4 576 570 625 521 0 0
20 636 552 695 533 0
sum3
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 408 108 728 88 0 \NUL
This multiplexor decides whether to increment or
22 12 108 371 88 0 \NUL
Multiplexor that decides where to let the 2-bit modified 
22 18 132 304 112 0 \NUL
RanNum 1 or unmodified RanNum1 through
22 408 132 725 112 0 \NUL
decrement score sum based on if they are equal
1 122 146 181 147
1 181 175 184 173
1 151 207 122 206
1 122 230 151 235
1 122 230 139 173
1 241 205 196 221
1 226 161 241 177
1 301 188 286 191
1 122 266 181 267
1 181 295 184 293
1 151 327 122 326
1 122 350 151 355
1 122 350 139 293
1 241 325 196 341
1 226 281 241 297
1 301 308 286 311
1 122 386 181 387
1 181 415 184 413
1 151 447 122 446
1 122 470 151 475
1 122 470 139 413
1 241 445 196 461
1 226 401 241 417
1 301 428 286 431
1 122 500 181 501
1 181 529 184 527
1 151 561 122 560
1 122 584 151 589
1 122 584 139 527
1 241 559 196 575
1 226 515 241 531
1 301 542 286 545
1 458 146 529 147
1 529 175 520 173
1 487 207 458 206
1 458 230 487 235
1 458 230 475 173
1 577 205 532 221
1 574 161 577 177
1 637 188 622 191
1 458 266 529 267
1 529 295 520 293
1 487 327 458 326
1 458 350 487 355
1 458 350 475 293
1 577 325 532 341
1 574 281 577 297
1 637 308 622 311
1 458 386 529 387
1 529 415 520 413
1 487 447 458 446
1 458 470 487 475
1 458 470 475 413
1 577 445 532 461
1 574 401 577 417
1 637 428 622 431
1 458 500 529 501
1 529 529 520 527
1 458 584 487 589
1 458 584 475 527
1 577 559 532 575
1 574 515 577 531
1 452 560 487 561
1 622 545 637 542
38 8
22 342 30 456 10 0 \NUL
4-bit Score Adder
19 96 186 155 167 0
reg0
3 510 186 559 137 0 0
20 570 168 629 149 0
sumo0
19 96 282 155 263 0
reg1
19 96 246 155 227 0
sumo0
3 510 282 559 233 0 0
20 570 264 629 245 0
sumo1
19 96 378 155 359 0
reg2
19 96 342 155 323 0
sumo1
3 510 378 559 329 0 0
20 570 360 629 341 0
sumo2
19 96 474 155 455 0
reg3
19 96 438 155 419 0
sumo2
15 144 162 193 113
15 432 180 481 131
35 222 468 271 419 0 0
19 384 348 443 329 0
sumo1
19 384 384 443 365 0
reg2
35 222 372 271 323 0 0
19 384 252 443 233 0
sumo0
19 384 288 443 269 0
reg1
35 222 276 271 227 0 0
19 384 192 443 173 0
reg0
35 222 180 271 131 0 0
20 288 162 347 143 0
+Scr0
20 282 258 341 239 0
+Scr1
20 282 354 341 335 0
+Scr2
20 282 450 341 431 0
+Scr3
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 114 528 479 508 0 \NUL
This intakes the register value and outputs the value +1
22 114 552 717 532 0 \NUL
This is sent to a multiplexor which decides whether to increment or decrement register value
1 571 158 556 161
1 571 254 556 257
1 571 350 556 353
1 478 155 511 147
1 152 428 223 429
1 440 338 511 339
1 152 332 223 333
1 440 242 511 243
1 152 236 223 237
1 223 141 190 137
1 268 251 283 248
1 268 155 289 152
1 268 347 283 344
1 268 443 283 440
1 152 176 223 169
1 152 272 223 265
1 152 368 223 361
1 223 457 152 464
1 511 367 440 374
1 511 271 440 278
1 440 182 511 175
38 9
22 342 30 474 10 0 \NUL
4-bit Score Register
24 102 252 151 180 1 1 1
24 102 180 151 108 1 1 1
22 84 108 171 88 0 \NUL
Sum Storage
19 12 372 71 353 0
sum0
19 18 294 77 275 0
sum1
19 18 210 77 191 0
sum2
19 18 138 77 119 0
sum3
19 12 402 71 383 0
update
20 168 378 227 359 0
reg0
20 162 294 221 275 0
reg1
20 162 210 221 191 0
reg2
20 162 138 221 119 0
reg3
24 102 336 151 264 1 1 1
24 102 420 151 348 1 1 1
19 12 432 71 413 0
reset
15 18 132 67 83
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 18 480 418 460 0 \NUL
This is the score register, it stores the score value from -8 - 7
22 18 504 540 484 0 \NUL
It is reset on the click of reset score, and updates when update bottom is clicked
22 18 528 146 508 0 \NUL
It is edge sensitive
1 74 128 103 128
1 74 200 103 200
1 103 368 68 362
1 74 284 103 284
1 68 392 103 386
1 68 392 103 302
1 68 392 103 218
1 68 392 103 146
1 68 422 116 416
1 116 332 68 422
1 68 422 116 248
1 68 422 116 176
1 163 128 148 128
1 163 200 148 200
1 163 284 148 284
1 169 368 148 368
1 64 107 116 110
1 116 182 64 107
1 116 266 64 107
1 116 350 64 107
38 10
22 342 30 435 10 0 \NUL
Display Logic
20 210 180 269 161 0
+scre2
20 210 216 269 197 0
+scre0
20 18 114 77 95 0
sgn6
20 18 132 77 113 0
sgn5
20 18 150 77 131 0
sgn4
20 198 126 257 107 0
sgn3
20 18 186 77 167 0
sgn2
20 18 204 77 185 0
sgn1
20 18 222 77 203 0
sgn0
19 126 126 185 107 0
reg3
19 120 198 179 179 0
reg1
19 120 180 179 161 0
reg2
19 120 216 179 197 0
reg0
20 210 198 269 179 0
+scre1
19 126 144 185 125 0
reg3
5 180 168 229 119 0
20 240 144 299 125 0
Nreg3
19 324 126 383 107 0
reg0
19 324 222 383 203 0
reg1
19 324 186 383 167 0
ScrR0
19 324 318 383 299 0
reg2
19 324 282 383 263 0
ScrR1
15 372 102 421 53
35 450 312 499 263 0 0
35 450 216 499 167 0 0
35 450 120 499 71 0 0
19 570 126 629 107 0
reg0
19 570 222 629 203 0
reg1
19 570 186 629 167 0
ScrR0
19 570 318 629 299 0
reg2
19 570 282 629 263 0
ScrR2
20 732 294 791 275 0
ScrR2
3 684 312 733 263 0 0
20 732 198 791 179 0
ScrR1
3 684 216 733 167 0 0
20 738 114 797 95 0
ScrR0
3 684 126 733 77 0 0
5 390 138 439 89 0
5 390 234 439 185 0
5 390 330 439 281 0
20 498 294 557 275 0
-scre2
20 498 198 557 179 0
-scre1
20 498 102 557 83 0
-scre0
19 18 264 77 245 0
-scre0
19 18 324 77 305 0
+scre0
19 18 348 77 329 0
Nreg3
5 90 306 139 257 0
3 144 294 193 245 0 0
3 102 354 151 305 0 0
4 192 324 241 275 0 0
20 252 306 311 287 0
score0
19 18 384 77 365 0
-scre1
19 18 444 77 425 0
+scre1
19 18 468 77 449 0
Nreg3
5 90 426 139 377 0
3 144 414 193 365 0 0
3 102 474 151 425 0 0
4 192 444 241 395 0 0
20 252 426 311 407 0
score1
19 18 504 77 485 0
-scre2
19 18 564 77 545 0
+scre2
19 18 588 77 569 0
Nreg3
5 90 546 139 497 0
3 144 534 193 485 0 0
3 102 594 151 545 0 0
4 192 564 241 515 0 0
20 252 546 311 527 0
score2
15 588 102 637 53
5 636 366 685 317 0
5 630 258 679 209 0
5 636 162 685 113 0
19 450 426 509 407 0
reg3
19 450 450 509 431 0
reg2
19 450 474 509 455 0
reg1
19 450 498 509 479 0
reg0
5 522 462 571 413 0
5 522 486 571 437 0
5 522 510 571 461 0
3 588 468 637 419 2 0
20 666 450 725 431 0
score3
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 84 102 359 82 0 \NUL
If MSB is 1, then negative sign is enabled
22 468 48 685 28 0 \NUL
Inverts and adds 1 to input value
22 132 360 400 340 0 \NUL
This multiplexor decides whether to print
22 180 384 417 364 0 \NUL
positive or modified negative output
22 438 402 762 382 0 \NUL
Handles the -8 special case that my handling has
1 182 116 199 116
1 182 134 181 143
1 226 143 241 134
1 451 81 418 77
1 626 176 685 177
1 626 272 685 273
1 733 284 730 287
1 733 188 730 191
1 739 104 730 101
1 436 113 451 109
1 380 116 391 113
1 451 301 436 305
1 391 305 380 308
1 380 272 451 273
1 380 212 391 209
1 436 209 451 205
1 451 177 380 176
1 496 287 499 284
1 496 191 499 188
1 496 95 499 92
1 176 170 211 170
1 211 188 176 188
1 176 206 211 206
1 74 254 145 255
1 145 283 136 281
1 103 315 74 314
1 74 338 103 343
1 74 338 91 281
1 193 313 148 329
1 190 269 193 285
1 253 296 238 299
1 74 374 145 375
1 145 403 136 401
1 103 435 74 434
1 74 458 103 463
1 74 458 91 401
1 193 433 148 449
1 190 389 193 405
1 253 416 238 419
1 74 494 145 495
1 145 523 136 521
1 103 555 74 554
1 74 578 103 583
1 74 578 91 521
1 193 553 148 569
1 190 509 193 525
1 253 536 238 539
1 634 77 685 87
1 626 308 637 341
1 685 301 682 341
1 626 116 637 137
1 685 115 682 137
1 685 205 676 233
1 626 212 631 233
1 506 488 523 485
1 506 464 523 461
1 506 440 523 437
1 506 416 589 429
1 568 437 589 438
1 568 461 589 448
1 568 485 589 457
1 634 443 667 440
38 11
22 336 60 431 40 0 \NUL
Rand1 2-bitter
19 78 168 137 149 0
r1_0
5 144 180 193 131 0
19 78 132 137 113 0
func
35 204 162 253 113 0 0
19 366 174 425 155 0
r1_0
5 432 186 481 137 0
19 366 138 425 119 0
func
3 492 168 541 119 0 0
20 552 150 611 131 0
carry0
20 258 144 317 125 0
rinv0
19 78 264 137 245 0
r1_1
5 144 276 193 227 0
19 78 228 137 209 0
carry0
35 204 258 253 209 0 0
19 366 270 425 251 0
r1_0
5 432 282 481 233 0
19 366 234 425 215 0
carry0
3 492 264 541 215 0 0
20 552 246 611 227 0
carry1
20 258 240 317 221 0
rinv1
19 78 360 137 341 0
r1_2
5 144 372 193 323 0
19 78 324 137 305 0
carry1
35 204 354 253 305 0 0
19 366 366 425 347 0
r1_0
5 432 384 481 335 0
19 366 330 425 311 0
carry1
3 492 360 541 311 0 0
20 552 342 611 323 0
carry2
20 258 336 317 317 0
rinv2
19 78 456 137 437 0
r1_3
5 144 468 193 419 0
19 78 420 137 401 0
carry2
35 204 450 253 401 0 0
20 258 432 317 413 0
rinv3
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
22 240 504 400 484 0 \NUL
2-bit modifies RanNum1
22 240 528 595 508 0 \NUL
This is sent to a multiplexor to decide what to print out
1 145 155 134 158
1 205 151 190 155
1 134 122 205 123
1 433 161 422 164
1 493 157 478 161
1 422 128 493 129
1 553 140 538 143
1 259 134 250 137
1 145 251 134 254
1 205 247 190 251
1 134 218 205 219
1 433 257 422 260
1 493 253 478 257
1 422 224 493 225
1 553 236 538 239
1 259 230 250 233
1 145 347 134 350
1 205 343 190 347
1 134 314 205 315
1 433 359 422 356
1 493 349 478 359
1 422 320 493 321
1 553 332 538 335
1 259 326 250 329
1 145 443 134 446
1 205 439 190 443
1 134 410 205 411
1 259 422 250 425
38 12
22 282 66 392 46 0 \NUL
Score subtractor
35 96 138 145 89 0 0
35 162 150 211 101 0 0
4 294 222 343 173 0 0
3 216 198 265 149 0 0
20 228 138 287 119 0
-Scr0
20 228 300 287 281 0
-Scr1
19 6 108 65 89 0
reg0
3 216 240 265 191 0 0
15 6 192 55 143
5 60 192 109 143 0
35 96 300 145 251 0 0
35 162 312 211 263 0 0
4 294 384 343 335 0 0
3 216 360 265 311 0 0
3 216 402 265 353 0 0
19 6 270 65 251 0
reg1
20 348 204 407 185 0
-Rem0
20 348 366 407 347 0
-Rem1
19 6 330 65 311 0
-Rem0
20 228 450 287 431 0
-Scr2
35 96 450 145 401 0 0
35 162 462 211 413 0 0
4 294 534 343 485 0 0
3 216 510 265 461 0 0
3 216 552 265 503 0 0
19 126 522 185 503 0
reg2
20 396 522 455 503 0
-Rem2
19 6 480 65 461 0
-Rem1
20 684 138 743 119 0
-Scr3
35 438 144 487 95 0 0
35 504 156 553 107 0 0
19 348 114 407 95 0
reg3
19 348 144 407 125 0
One
19 126 546 185 527 0
One
19 6 300 65 281 0
One
19 6 138 65 119 0
One
15 510 354 559 305
20 564 342 623 323 0
One
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 110 34 0 \NUL
Golan, Yotam
22 18 78 74 58 0 \NUL
yogolan
19 348 174 407 155 0
-Rem2
19 6 420 65 401 0
reg2
19 6 444 65 425 0
One
19 144 378 203 359 0
reg1
19 144 402 203 383 0
One
19 120 210 179 191 0
reg0
19 120 240 179 221 0
One
22 138 570 535 550 0 \NUL
Subtracts 1 from the register and outputs it to the multiplexor
22 138 594 320 574 0 \NUL
4 full adders glued together
1 142 113 163 111
1 142 113 217 187
1 262 173 295 183
1 295 211 262 215
1 97 99 62 98
1 61 167 52 167
1 106 167 163 139
1 142 275 163 273
1 142 275 217 349
1 262 335 295 345
1 295 373 262 377
1 97 261 62 260
1 106 167 217 159
1 340 197 349 194
1 340 359 349 356
1 163 301 62 320
1 62 320 217 321
1 208 125 229 128
1 229 290 208 287
1 142 425 163 423
1 142 425 217 499
1 262 485 295 495
1 295 523 262 527
1 182 512 217 513
1 163 451 62 470
1 62 470 217 471
1 229 440 208 437
1 484 119 505 117
1 439 105 404 104
1 685 128 550 131
1 404 134 439 133
1 182 536 217 541
1 62 290 97 289
1 62 128 97 127
1 556 329 565 332
1 505 145 404 164
1 340 509 397 512
1 62 410 97 411
1 62 434 97 439
1 200 392 217 391
1 200 368 217 363
1 176 200 217 201
1 176 230 217 229
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
